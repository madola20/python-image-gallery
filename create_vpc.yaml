---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      region: "us-east-1"

  tasks:
    - name: import keypair
      ec2_key:
        name: mod_5
        key_material: "{{ lookup('file', '/home/ec2-user/.ssh/id_rsa.pub') }}"
    - name: Create VPC
      ec2_vpc_net:
        name: Module5
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        state: present
      register: vpc
    - name: Create public subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 public
          Module: 5
        cidr: 10.10.0.0/24
        state: present
      register: m5_public_subnet
    - name: Create private subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Module: 5
          Name: Module5 private
        cidr: 10.10.1.0/24
        state: present
      register: m5_private_subnet
    - name: Create internent gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 gateway
        state: present
      register: igw
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5
        subnets:
          - "{{ m5_public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
    - name: Create security group
      ec2_group:
        name: Module5-developer-sg
        description: Developer secuirty group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all to ports 22 and 80
        state: present
      register: sg
    - name: Create launch template
      ec2_launch_template:
        name: Module-5-lt
        tags:
          Name: Module5
        image_id: ami-0022f774911c1d690
        instance_type: t3.nano
        key_name: mod_5
        state: present
   # - name: Create elastic IP
     # ec2_eip:
      #  state: present
       # in_vpc: true
        #tag_name: mod5
        #reuse_existing_ip_allowed: yes
      #register: eip
    - name: Create target group
      elb_target_group:
        name: m5-tg
        protocol: TCP
        port: 80
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
    - name: Create load balancer
      elb_network_lb:
        name: Module-5-nlb
        scheme: internet-facing
        region: us-east-1
        subnet_mappings:
          - SubnetId: "{{ m5_public_subnet.subnet.id }}"
          # AllocationId: "{{ eip.public_ip }}"
        listeners:
          - Protocol: TCP
            Port: 80
            DefaultActions:
              - Type: forward
                TargetGroupName: m5-tg
         # - Protocol: TLS
           # Port: 443
           # DefaultActions:
          #      TargetGroupName: m5-tg
        state: present
      register: nlb
    - name: Create launch config
      ec2_lc:
        name: new_lc
        image_id: ami-0022f774911c1d690
        key_name: mod_5
        security_groups: Module5-developer-sg
        instance_type: t3.nano
        assign_public_ip: yes
        state: present
    - name: Create autoscaling group
      ec2_asg:
        name: mod5-asg
        #load_balancers: Module-5-nlb
        launch_config_name: new_lc
        health_check_period: 60
        health_check_type: ELB
        replace_all_instances: yes
        min_size: 3
        max_size: 5
